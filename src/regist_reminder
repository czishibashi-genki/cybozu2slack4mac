#!/bin/bash
#atで実行するため、言語の環境変数をexport
export LANG="ja_JP.UTF-8"

#project_root_dir
prd=$(cd $(dirname $0)/.. && pwd)

#このshellの絶対パス
this=$prd/src/$(basename $0)

#logファイル
register_command_log=$prd/log/register_command.log
register_info_log=$prd/log/register_info.log
slack_log=$prd/log/slack.log
date +"[%R %F]" | tee -a $register_command_log >>$register_info_log 

#slackのコマンドのpath
send_to_slack=$prd/src/send2slack

#cybozuのコマンドのpath
crawl_cybozu=$prd/src/cybozu

#設定ファイルから設定を読み込む
read_env() {
  while read line; do
    var_name=$(echo "$line" | awk -F= '{gsub(/^ +| +$/,"",$1); print $1}')
    var_value=$(echo "$line" | cut -d= -f2- | awk '{gsub(/^ +| +$/,""); print}')
    eval "${var_name:-_}='${var_value:-_}'"
  done < <(cat $prd/resource/env | grep -Ev "^ *#+|^ *$")
}

is_visible_private_schedules(){
  [ "${is_visible_private_schedule:-false}" = 'true' ] && echo 1 || echo 0
}

#第一フィールドの5分前の時刻を求める input 18:50 19:00 ... => output 18:45
get_minus_5min_datetime() {
  echo "$*" | cut -d" " -f1 | xargs -I__ date -j -v-5M -f %H:%M __ +"%R %D"
}

#atコマンドで実行するコマンドを求める
create_command_to_send_to_slack() {
   echo "$*" |\
     awk -v is_visible_secret_schedule=$(is_visible_private_schedules) '
     (!is_visible_secret_schedule) && /（非公開）/ {
       match($0, /[0-9:]{4,5}-[0-9:]{4,5} +/);
       $0 = substr($0, RSTART, RLENGTH)"(非公開)"
     }
     { print }
     ' |\
     awk "{ 
       send2slack = \"$send_to_slack -n'$bot_name' -i'$bot_icon' -c'$channel' '$slack_url' 1>/dev/null 2>>$slack_log\";
       print \"echo '\"\$0\"' | tee -a $slack_log | \"send2slack;
     }"
}

regist_reminder() {
  schedules=$($crawl_cybozu $cybozu_account $cybozu_password 2>>$register_info_log) || return 1

  if [ -n "$schedules" ]; then
    paste \
        <(create_command_to_send_to_slack "${schedules//∆/:warning:}") \
        <(get_minus_5min_datetime "$(echo "${schedules//-/ }" |\
            awk '
              $1 != "∆"{$0 = "_ "$0}
              {print}
            ' |\
            cut -d" " -f2- )"\
        ) |\
      awk -F"\t" '
        {
          command = "date +[%R_%D] >>'"$slack_log"'; "$1;
          print "echo \"", command, "\" | at ", $2
        }' |\
      tee -a $register_command_log |\
      bash 2>>$register_info_log || return 1
  fi
}

#次の日のreminderを登録するシェルをatコマンドのqueueに追加する
#atコマンドはsleep状態でも次起動した時すぐ動くらしいのでcronではなくatコマンドで
regist_next() {
  case $(date +%w) in 
    5) next_day=$(date -v+3d +%D) ;;
    *) next_day=$(date -v+1d +%D) ;;
  esac
  echo "bash $this" | at 9:53 $next_day 2>>$register_info_log
}


main() {
  read_env 
  regist_reminder 
  regist_next
}

main
